import{_ as t,c as r,a0 as e,o}from"./chunks/framework.CGHvQLJz.js";const s="/assets/proto-chain.DErU8lv9.png",i="/assets/class-tree.CcsqE9RL.png",u=JSON.parse('{"title":"原型链","description":"","frontmatter":{},"headers":[],"relativePath":"front/js/basic/proto.md","filePath":"front/js/basic/proto.md"}'),n={name:"front/js/basic/proto.md"};function c(p,a,l,d,h,m){return o(),r("div",null,a[0]||(a[0]=[e('<h1 id="原型链" tabindex="-1">原型链 <a class="header-anchor" href="#原型链" aria-label="Permalink to &quot;原型链&quot;">​</a></h1><h2 id="原型链是什么" tabindex="-1">原型链是什么 <a class="header-anchor" href="#原型链是什么" aria-label="Permalink to &quot;原型链是什么&quot;">​</a></h2><p>原型链是JavaScript中的一种机制，它允许对象继承属性和方法。每个JavaScript对象都有一个原型对象，这个原型对象也有自己的原型对象，以此类推，形成一个链条。当访问一个对象的属性或方法时，如果该对象本身没有该属性或方法，JavaScript引擎会沿着原型链向上查找，直到找到为止。</p><h2 id="原型链的作用" tabindex="-1">原型链的作用 <a class="header-anchor" href="#原型链的作用" aria-label="Permalink to &quot;原型链的作用&quot;">​</a></h2><p>原型链的作用是实现对象的继承。通过原型链，子对象可以继承父对象的属性和方法，从而实现代码的复用和模块化。</p><h2 id="原型链的原理" tabindex="-1">原型链的原理 <a class="header-anchor" href="#原型链的原理" aria-label="Permalink to &quot;原型链的原理&quot;">​</a></h2><p><img src="'+s+'" alt="proto"></p><p><img src="'+i+'" alt="alt text"></p>',8)]))}const _=t(n,[["render",c]]);export{u as __pageData,_ as default};
