import{_ as a,c as t,o as r,ae as s}from"./chunks/framework.Dh1jimFm.js";const o="/assets/structure.dio.DdAIrdXq.svg",i="/assets/scope.BVLVmhRk.png",u=JSON.parse('{"title":"软件设计","description":"","frontmatter":{"title":"软件设计","order":20},"headers":[],"relativePath":"design/index.md","filePath":"design/index.md"}'),n={name:"design/index.md"};function d(c,e,_,l,p,h){return r(),t("div",null,e[0]||(e[0]=[s('<h1 id="软件设计" tabindex="-1">软件设计 <a class="header-anchor" href="#软件设计" aria-label="Permalink to &quot;软件设计&quot;">​</a></h1><h2 id="程序结构" tabindex="-1">程序结构 <a class="header-anchor" href="#程序结构" aria-label="Permalink to &quot;程序结构&quot;">​</a></h2><p><img src="'+o+'" alt=""></p><h2 id="作用域" tabindex="-1">作用域 <a class="header-anchor" href="#作用域" aria-label="Permalink to &quot;作用域&quot;">​</a></h2><p>从一定的角度看。程序就是状态+作用域，作用域需要被声明，声明之后可以被展开，展开时，可以将状态传入一个域，在域展开的过程当中，状态可以被改变，在域展开完毕时，可以将闭合，同时传出状态。减少使用内部嵌套的子依赖，使用外部依赖，因为内部嵌套的子域存在双向依赖，以便于拆分作用域； <img src="'+i+'" alt="scope"></p>',5)]))}const f=a(n,[["render",d]]);export{u as __pageData,f as default};
