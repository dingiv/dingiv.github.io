import{_ as t,c as l,o,ae as a}from"./chunks/framework.Dh1jimFm.js";const d=JSON.parse('{"title":"块级格式上下文","description":"","frontmatter":{},"headers":[],"relativePath":"front/css/bfc.md","filePath":"front/css/bfc.md"}'),i={name:"front/css/bfc.md"};function r(n,e,s,c,f,_){return o(),l("div",null,e[0]||(e[0]=[a('<h1 id="块级格式上下文" tabindex="-1">块级格式上下文 <a class="header-anchor" href="#块级格式上下文" aria-label="Permalink to &quot;块级格式上下文&quot;">​</a></h1><p>区块格式化上下文（Block Formatting Context，BFC）是 Web 页面的可视 CSS 渲染的一部分，是块级盒子的布局过程发生的区域，也是浮动元素与其他元素交互的区域。其定义洋洋洒洒在<a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/CSS_display/Block_formatting_context" target="_blank" rel="noreferrer">mdn</a>写了一堆。</p><p>但是总结起来，可以将其作用认为是识别浮动边界、隔离影响。BFC是一个独立的区域，在这个容器中按照一定规则进行物品摆放，并且不会影响其它环境中的物品。 如何创建：总结起来就是，普通的display为block的元素不是，其他大部分都是bfc。例如：</p><ol><li>根元素或包含根元素的元素</li><li>浮动元素 float ＝ left | right 或 inherit（≠ none）</li><li>绝对定位元素 position ＝ absolute 或 fixed</li><li>display ＝ inline-block | flex | inline-flex | table-cell 或 table-caption</li><li>overflow ＝ hidden | auto 或 scroll (≠ visible)</li></ol><p>在同一个BFC中的儿子元素之间的margin会发生折叠，使用一个激活了BFC的元素包裹可以防止折叠，BFC可以防止float元素影响自己，激活自己的BFC可以防止float改变自己内部的文字的排布。</p>',5)]))}const b=t(i,[["render",r]]);export{d as __pageData,b as default};
