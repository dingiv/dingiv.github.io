import{_ as d,c as r,o as e,ae as a}from"./chunks/framework.BtEkjhVd.js";const c=JSON.parse('{"title":"Linux","description":"","frontmatter":{"title":"Linux","order":20},"headers":[],"relativePath":"kernel/linux/index.md","filePath":"kernel/linux/index.md"}'),n={name:"kernel/linux/index.md"};function i(l,t,o,s,u,x){return e(),r("div",null,t[0]||(t[0]=[a('<h1 id="linux" tabindex="-1">Linux <a class="header-anchor" href="#linux" aria-label="Permalink to &quot;Linux&quot;">​</a></h1><p>linux 系统是当今使用最为广泛的操作系统，从嵌入式设备到手机、PC、服务器，处处都有其身影，在实际的生产中，往往会基于已有的操作系统进行定制，而不是从头开始编写，利用现有的 linux 实现可以极大加速系统层开发，同时复用 linux 平台上的应用层软件生态。</p><h2 id="linux-系统开发" tabindex="-1">linux 系统开发 <a class="header-anchor" href="#linux-系统开发" aria-label="Permalink to &quot;linux 系统开发&quot;">​</a></h2><p>linux 系统是一个高度模块化的软件系统，由开源社区维护。系统开发者可以充分参与其中开发，并以之为基础定制属于自己的操作系统。</p><p>linux 包含多个子系统，每个子系统负责特定的功能，常见的重要的子系统有：</p><table tabindex="0"><thead><tr><th>子系统名称</th><th>功能简介</th></tr></thead><tbody><tr><td>🔧 进程管理子系统</td><td>管理 task（进程/线程）、调度器、上下文切换等</td></tr><tr><td>🧠 内存管理子系统（MM）</td><td>管理虚拟内存、物理页框、页表、内存映射、swap、slab/slub等</td></tr><tr><td>📁 文件系统子系统（VFS）</td><td>抽象多种文件系统接口（ext4、xfs、proc、tmpfs等）</td></tr><tr><td>💾 块设备子系统（Block I/O）</td><td>管理磁盘等块设备、I/O 调度器</td></tr><tr><td>🧮 系统调用接口子系统（Syscall）</td><td>提供用户态与内核通信的接口（如 open/read/write）</td></tr><tr><td>🌐 网络子系统（Net）</td><td>实现 TCP/IP 协议栈、socket、路由、防火墙等功能</td></tr><tr><td>⌨️ 设备驱动子系统</td><td>通过驱动框架（platform bus、PCI、USB 等）管理硬件</td></tr><tr><td>🔐 安全子系统（LSM）</td><td>提供权限控制、安全策略（SELinux、AppArmor）</td></tr><tr><td>🧾 中断和时钟子系统</td><td>处理中断、定时器、时钟源</td></tr><tr><td>⌛ 电源管理子系统（PM）</td><td>控制设备节能模式、休眠、唤醒等</td></tr><tr><td>🔄 同步/IPC 子系统</td><td>实现信号、信号量、futex、消息队列、管道等通信机制</td></tr><tr><td>📊 审计与跟踪子系统</td><td>提供 audit、tracepoints、perf、eBPF 支持</td></tr><tr><td>🪤 错误处理子系统</td><td>处理异常、oops、panic、内存纠错等</td></tr></tbody></table>',6)]))}const _=d(n,[["render",i]]);export{c as __pageData,_ as default};
