import{_ as a,c as e,o as d,ae as r}from"./chunks/framework.Cd-3tpCq.js";const m=JSON.parse('{"title":"ARM 指令集","description":"","frontmatter":{},"headers":[],"relativePath":"kernel/asm/arm.md","filePath":"kernel/asm/arm.md"}'),l={name:"kernel/asm/arm.md"};function o(i,t,c,h,n,s){return d(),e("div",null,t[0]||(t[0]=[r('<h1 id="arm-指令集" tabindex="-1">ARM 指令集 <a class="header-anchor" href="#arm-指令集" aria-label="Permalink to &quot;ARM 指令集&quot;">​</a></h1><h2 id="常用寄存器-64-位" tabindex="-1">常用寄存器 64 位 <a class="header-anchor" href="#常用寄存器-64-位" aria-label="Permalink to &quot;常用寄存器 64 位&quot;">​</a></h2><h3 id="通用寄存器" tabindex="-1">通用寄存器 <a class="header-anchor" href="#通用寄存器" aria-label="Permalink to &quot;通用寄存器&quot;">​</a></h3><table tabindex="0"><thead><tr><th>寄存器名称</th><th>描述</th></tr></thead><tbody><tr><td>X0</td><td>函数返回值和第一个参数传递</td></tr><tr><td>X1-X7</td><td>第二~八个参数传递</td></tr><tr><td>X8</td><td>系统调用号</td></tr><tr><td>X9-X15</td><td>临时寄存器</td></tr><tr><td>X16-X18</td><td>保留寄存器，和平台相关，不同平台可能不同</td></tr><tr><td>X19-X28</td><td>被调用者保存寄存器</td></tr><tr><td>X29</td><td>栈指针(SP)，指向栈顶</td></tr><tr><td>X30</td><td>链接寄存器(LR)，存储返回地址</td></tr><tr><td>X31</td><td>程序计数器(PC)，存储当前指令地址</td></tr></tbody></table><h2 id="常见指令" tabindex="-1">常见指令 <a class="header-anchor" href="#常见指令" aria-label="Permalink to &quot;常见指令&quot;">​</a></h2><h3 id="数据处理指令" tabindex="-1">数据处理指令 <a class="header-anchor" href="#数据处理指令" aria-label="Permalink to &quot;数据处理指令&quot;">​</a></h3><ul><li><code>MOV</code>：寄存器间移动数据</li><li><code>ADD/SUB</code>：加减运算</li><li><code>AND/ORR/EOR</code>：位操作</li><li><code>CMP</code>：比较指令</li><li><code>MUL/MLA</code>：乘法和乘加</li></ul><h3 id="内存访问指令" tabindex="-1">内存访问指令 <a class="header-anchor" href="#内存访问指令" aria-label="Permalink to &quot;内存访问指令&quot;">​</a></h3><ul><li><code>LDR/STR</code>：加载/存储字数据</li><li><code>LDM/STM</code>：多寄存器加载/存储</li><li><code>PUSH/POP</code>：栈操作指令</li></ul><h3 id="分支指令" tabindex="-1">分支指令 <a class="header-anchor" href="#分支指令" aria-label="Permalink to &quot;分支指令&quot;">​</a></h3><ul><li><code>B</code>：无条件跳转</li><li><code>BL</code>：带链接跳转(用于函数调用)</li><li><code>BX</code>：切换指令集(ARM/Thumb)</li></ul><h3 id="协处理器指令" tabindex="-1">协处理器指令 <a class="header-anchor" href="#协处理器指令" aria-label="Permalink to &quot;协处理器指令&quot;">​</a></h3><ul><li><code>CDP</code>：协处理器数据处理</li><li><code>LDC/STC</code>：协处理器加载/存储</li><li><code>MCR/MRC</code>：ARM与协处理器间数据传输</li></ul><h2 id="指令特点" tabindex="-1">指令特点 <a class="header-anchor" href="#指令特点" aria-label="Permalink to &quot;指令特点&quot;">​</a></h2><ol><li><strong>条件执行</strong>：大多数指令可条件执行(如ADDEQ)</li><li><strong>桶形移位器</strong>：支持操作数移位(如LSL,LSR,ASR,ROR)</li><li><strong>Thumb指令集</strong>：16位压缩指令集提高代码密度</li><li><strong>加载/存储架构</strong>：只有加载/存储指令可访问内存</li></ol>',15)]))}const b=a(l,[["render",o]]);export{m as __pageData,b as default};
