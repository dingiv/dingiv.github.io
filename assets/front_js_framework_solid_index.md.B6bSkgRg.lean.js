import{_ as r,c as t,o as d,j as e,a as o}from"./chunks/framework.BHrE6nLq.js";const x=JSON.parse('{"title":"Solid","description":"","frontmatter":{},"headers":[],"relativePath":"front/js/framework/solid/index.md","filePath":"front/js/framework/solid/index.md"}'),i={name:"front/js/framework/solid/index.md"};function n(s,a,l,m,f,c){return d(),t("div",null,a[0]||(a[0]=[e("h1",{id:"solid",tabindex:"-1"},[o("Solid "),e("a",{class:"header-anchor",href:"#solid","aria-label":'Permalink to "Solid"'},"​")],-1),e("h2",{id:"list-map-index和for的区别",tabindex:"-1"},[o("list.map()，Index和For的区别 "),e("a",{class:"header-anchor",href:"#list-map-index和for的区别","aria-label":'Permalink to "list.map()，Index和For的区别"'},"​")],-1),e("p",null,"list.map()全量更新：适合做静态列表渲染；Index在依赖的键值发生变化的时候更新整个列表中的每个项目的相应的键值，不涉及列表dom的重新增删；For在某个依赖的列表项的上数据发生变化的时候，将会销毁这个列表项及其dom，重新创一个新的，而不管其他项；一般地，Index用的多，渲染长列表用For。",-1)]))}const h=r(i,[["render",n]]);export{x as __pageData,h as default};
