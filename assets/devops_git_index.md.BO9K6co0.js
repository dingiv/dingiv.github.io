import{_ as e,c as t,o as l,ae as a}from"./chunks/framework.BtEkjhVd.js";const f=JSON.parse('{"title":"Git","description":"","frontmatter":{"title":"Git","order":20},"headers":[],"relativePath":"devops/git/index.md","filePath":"devops/git/index.md"}'),o={name:"devops/git/index.md"};function r(s,i,d,c,n,_){return l(),t("div",null,i[0]||(i[0]=[a('<h1 id="git" tabindex="-1">Git <a class="header-anchor" href="#git" aria-label="Permalink to &quot;Git&quot;">​</a></h1><h2 id="commit。约定式提交" tabindex="-1">commit。约定式提交 <a class="header-anchor" href="#commit。约定式提交" aria-label="Permalink to &quot;commit。约定式提交&quot;">​</a></h2><ul><li>feat: 新功能、新特性</li><li>fix: 修改 bug</li><li>perf: 更改代码，以提高性能（在不影响代码内部行为的前提下，对程序性能进行优化）</li><li>refactor: 代码重构（重构，在不影响代码内部行为、功能下的代码修改）</li><li>docs: 文档修改</li><li>style: 代码格式修改, 注意不是 css 修改（例如分号修改）</li><li>test: 测试用例新增、修改</li><li>build: 影响项目构建或依赖项修改</li><li>revert: 恢复上一次提交</li><li>ci: 持续集成相关文件修改</li><li>chore: 其他修改（不在上述类型中的修改）</li><li>release: 发布新版本</li><li>workflow: 工作流相关文件修改</li></ul>',3)]))}const p=e(o,[["render",r]]);export{f as __pageData,p as default};
