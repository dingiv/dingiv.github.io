import{_ as a,c as r,o as e,ae as o}from"./chunks/framework.Cd-3tpCq.js";const h=JSON.parse('{"title":"硬件组成","description":"","frontmatter":{"title":"硬件组成","order":31},"headers":[],"relativePath":"basic/hardware/index.md","filePath":"basic/hardware/index.md"}'),n={name:"basic/hardware/index.md"};function s(i,t,l,d,_,c){return e(),r("div",null,t[0]||(t[0]=[o('<h1 id="硬件组成" tabindex="-1">硬件组成 <a class="header-anchor" href="#硬件组成" aria-label="Permalink to &quot;硬件组成&quot;">​</a></h1><p>当今的计算机硬件使用经典的<strong>冯诺依曼</strong>架构。</p><p>计算机的核心组件有两个：<strong>CPU 和内存</strong>，除此之外，统称<strong>IO 设备</strong>或者外部设备，还有支持设备之间的通信和交互的<strong>主板</strong>平台。由此，构成了冯诺依曼架构机器所必须讨论的三个主题：<strong>计算</strong>、<strong>存储</strong>和<strong>通信</strong>。</p><h2 id="硬件如何执行程序" tabindex="-1">硬件如何执行程序 <a class="header-anchor" href="#硬件如何执行程序" aria-label="Permalink to &quot;硬件如何执行程序&quot;">​</a></h2><ul><li>程序起初被存放在硬盘的持久化设备中，当程序被执行时，其他程序会指挥 CPU 会从硬盘中读取程序到内存中，然后跳转到程序的入口执行程序；</li><li>程序被放到内存中的某个位置，内存中存储的程序数据可以有两种视角：一种是纯数据，另一种是指令；</li><li>CPU 从内存中读取指令，然后执行指令，执行完毕后，将计算结果写入内存；</li><li>为了持久化数据，CPU 可以将内存中的数据写入磁盘，或者从磁盘中读取数据；</li><li>内存中的指令可以包含各种操作，比如加法、减法、乘法、除法、比较等算术运算，以及数据的存储和读取，地址跳转等，数据的存储和读取是最基本的操作，也是最常见的操作，它基于内存地址来实现；</li></ul>',5)]))}const p=a(n,[["render",s]]);export{h as __pageData,p as default};
