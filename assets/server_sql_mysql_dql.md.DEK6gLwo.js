import{_ as i,c as a,o as l,ae as n}from"./chunks/framework.CBTkueSR.js";const c=JSON.parse('{"title":"DCL","description":"","frontmatter":{},"headers":[],"relativePath":"server/sql/mysql/dql.md","filePath":"server/sql/mysql/dql.md"}'),e={name:"server/sql/mysql/dql.md"};function t(h,s,p,k,d,r){return l(),a("div",null,[...s[0]||(s[0]=[n(`<h1 id="dcl" tabindex="-1">DCL <a class="header-anchor" href="#dcl" aria-label="Permalink to &quot;DCL&quot;">​</a></h1><p>基础操作：定义数据库和表，增删改数据库和表，查询，权限控制 主要掌握DML和DQL，如果有DBA的工作，则需要再掌握DCL</p><p>函数： 聚合函数：主要作用于select之后 其他函数：字符串函数，数值函数，日期函数，流程控制函数 例如：trim,lpad, rand, date_diff,data_add</p><h2 id="ddl" tabindex="-1">DDL <a class="header-anchor" href="#ddl" aria-label="Permalink to &quot;DDL&quot;">​</a></h2><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">use</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> database/schema</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">create</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> database</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [name]</span></span></code></pre></div><h2 id="dml" tabindex="-1">DML <a class="header-anchor" href="#dml" aria-label="Permalink to &quot;DML&quot;">​</a></h2><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">insert into</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [table] ([col],[col]) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">values</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">([val],[val])</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">insert into</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [table] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">values</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">([val],[val]) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">-- 默认全部列</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">delete</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [table] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">where</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [conditions]</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">update</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [table] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">set</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [col]</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[val] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">where</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [conditions]</span></span></code></pre></div><h2 id="dql" tabindex="-1">DQL <a class="header-anchor" href="#dql" aria-label="Permalink to &quot;DQL&quot;">​</a></h2><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">select</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> *</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> /</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> col </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> func()</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[child col]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [table] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [join table] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [child table]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">where</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [conditions]  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">-- conditions可以是对col和child table的运算</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">group by</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [col] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">having</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [conditions]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">order by</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [col],[col]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">limit</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [start index],[per pages]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">union</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [select ...]</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">-- 执行顺序：from where group select order limit</span></span></code></pre></div><h2 id="多表关系" tabindex="-1">多表关系： <a class="header-anchor" href="#多表关系" aria-label="Permalink to &quot;多表关系：&quot;">​</a></h2><p>一对多：在多的字段往往作为一的一个属性，在多中建立外键关联一的主键，on update 设置为级联，on delete设置为set null 多对多：使用第三张表来维护，字段有id作为主键，两张表的主键，作为该表的外键 一对一：在其中的任何一方，将其主键设置成外键关联至另外一个的主键。</p><h2 id="连接和子查" tabindex="-1">连接和子查 <a class="header-anchor" href="#连接和子查" aria-label="Permalink to &quot;连接和子查&quot;">​</a></h2><p>允许将查询的结果作为新的变量进行使用</p><h2 id="事务" tabindex="-1">事务 <a class="header-anchor" href="#事务" aria-label="Permalink to &quot;事务&quot;">​</a></h2><p>控制数据的回滚功能，保护数据的完整性和一致性：原子性，一致性，隔离性，持久性。</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">begin</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> -- 开启事务</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">commit</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> -- 提交事务</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">rollback</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> -- 回滚事务</span></span></code></pre></div><p>并发事务问题</p><ul><li>脏读</li><li>不可重复读</li><li>幻读</li></ul><p>为了解决事务并发问题，可以为事务添加隔离级别。</p><p>进阶 存储引擎（表类型）shows engines</p><p>索引：高效管理数据，以提高查询速率，降低IO成本，降低排序成本和CPU消耗，但是会使得增删改的效率降低</p><p>索引结构： B+Tree索引 hash索引（精确查询，快速，不支持范围查找） R-Tree索引（空间索引，主要用于地理空间的数据结构） Full-Text索引（全文索引，文档匹配，高效）</p><h2 id="mysql调优基础" tabindex="-1">mysql调优基础 <a class="header-anchor" href="#mysql调优基础" aria-label="Permalink to &quot;mysql调优基础&quot;">​</a></h2><p>查看执行频次 show global status like ‘Com______’ 慢查询分析 show global variables like ‘slow_query_log’ 性能分析 show profiles for [sqlStr] 查询计划 explain</p><h2 id="索引" tabindex="-1">索引 <a class="header-anchor" href="#索引" aria-label="Permalink to &quot;索引&quot;">​</a></h2><ul><li>对于联合索引，最左前缀原则，中间不能断，不能使用&gt;或&lt;，应该尽可能使用&gt;=或&lt;=</li><li>对于字符串查询，要加单引号、模糊匹配不能让字符串开头为模糊符号</li><li>对于全部查询，不使用函数作用于列、使用or连接两个字段必须都有否则均失效、值得一提的是，mysql内部对于索引的选择是有优化的，原因是全表扫描在某些情况下更快，这是mysql内部的数据分布评估SQL提示，在SQLStr中显式指定index。</li></ul>`,26)])])}const g=i(e,[["render",t]]);export{c as __pageData,g as default};
