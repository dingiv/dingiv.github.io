import{_ as e,c as i,o as l,ae as r}from"./chunks/framework.Dgg8-8ov.js";const p=JSON.parse('{"title":"文件管理","description":"","frontmatter":{"title":"文件管理","order":40},"headers":[],"relativePath":"kernel/linux/file/index.md","filePath":"kernel/linux/file/index.md"}'),t={name:"kernel/linux/file/index.md"};function n(o,a,h,d,s,u){return l(),i("div",null,a[0]||(a[0]=[r('<h1 id="文件管理" tabindex="-1">文件管理 <a class="header-anchor" href="#文件管理" aria-label="Permalink to &quot;文件管理&quot;">​</a></h1><p>文件管理是操作系统进行持久化管理的整一套链路。包括从对底层磁盘等外部存储设备的管理，到对于提供给上层用户的文件接口。在用户打开了一个文件，并写入数据的过程中，涉及了多个子系统的配合。</p><p>其中包括：</p><ul><li>应用层-进程管理子系统</li><li>系统调用层-系统调用子系统</li><li>vfs 层-虚拟文件子系统</li><li>协议层-块设备子系统、网络子系统</li><li>设备层-设备管理子系统 <ul><li>设备抽象层</li><li>设备驱动层</li><li>物理硬件层</li></ul></li></ul><h2 id="应用层" tabindex="-1">应用层 <a class="header-anchor" href="#应用层" aria-label="Permalink to &quot;应用层&quot;">​</a></h2><p>在应用层，用户态程序以进程为单位来维护进程本身所使用的资源。用户程序需要使用一个文件的时候，会先向</p><h2 id="系统调用" tabindex="-1">系统调用 <a class="header-anchor" href="#系统调用" aria-label="Permalink to &quot;系统调用&quot;">​</a></h2><h2 id="vfs" tabindex="-1">VFS <a class="header-anchor" href="#vfs" aria-label="Permalink to &quot;VFS&quot;">​</a></h2><p>Linux 继承了 Unix 系统的经典哲学——<strong>一切皆文件</strong>的思想。虚拟文件系统（Virtual File System，VFS）是 Linux 内核中的一个重要抽象层，它为不同的文件系统提供了统一的接口，使得应用程序可以用相同的方式访问不同类型的文件系统。</p><p>注意区分虚拟文件系统和文件系统，虚拟文件系统是 Linux 的管理文件的子系统，而文件系统是一种通用的协议。</p><h2 id="协议层" tabindex="-1">协议层 <a class="header-anchor" href="#协议层" aria-label="Permalink to &quot;协议层&quot;">​</a></h2><h3 id="文件系统" tabindex="-1">文件系统 <a class="header-anchor" href="#文件系统" aria-label="Permalink to &quot;文件系统&quot;">​</a></h3><p>文件系统是一种协议，规定了如何在磁盘上组织和存储数据。因为，磁盘是块设备，可以看作是一个具有固定大小的字节数组。而我们打开一个磁盘看到的却是一个树形的文件目录结构，如何在一个字节数组上去存储一个树形的文件目录结构，就是文件系统干的事情。</p><ul><li>文件系统是跨操作系统的，一个操作系统只要能够实现一个文件系统就可以，从一个使用某种文件系统组织数据的磁盘中获取数据</li><li>同一个系统管理的不同的磁盘也可以使用不同文件系统来管理</li><li>文件系统与磁盘驱动之间没有直接关联，文件系统描述的是字节数据的组织形式，而磁盘驱动负责从磁盘读写字节数据块；但是文件系统往往需要间接调用驱动来帮它读写数据，操作硬件。</li><li>磁盘在挂载到虚拟文件系统前需要格式化，格式化过程就是建立文件系统的过程</li></ul><h3 id="网络协议栈" tabindex="-1">网络协议栈 <a class="header-anchor" href="#网络协议栈" aria-label="Permalink to &quot;网络协议栈&quot;">​</a></h3><h2 id="设备层" tabindex="-1">设备层 <a class="header-anchor" href="#设备层" aria-label="Permalink to &quot;设备层&quot;">​</a></h2>',16)]))}const f=e(t,[["render",n]]);export{p as __pageData,f as default};
