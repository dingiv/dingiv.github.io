import{_ as e,c as l,o as t,ae as a}from"./chunks/framework.BtEkjhVd.js";const A=JSON.parse('{"title":"人工智能","description":"","frontmatter":{"title":"人工智能","order":70},"headers":[],"relativePath":"ai/index.md","filePath":"ai/index.md"}'),o={name:"ai/index.md"};function r(n,i,p,s,_,d){return t(),l("div",null,i[0]||(i[0]=[a('<h1 id="ai" tabindex="-1">AI <a class="header-anchor" href="#ai" aria-label="Permalink to &quot;AI&quot;">​</a></h1><p>软件在做的事情就是将人的智能使用计算机重现，或者使用机器人实现，以此解放人类劳动力</p><blockquote><p>普通软件-&gt;AI 普通机械-&gt;AI机器人</p></blockquote><p>智能重现步骤：</p><ol><li>知识总结：总结专业知识和人类智能，将一项知识进行理论化，形成一个逻辑完备的系统和体系；</li><li>特征工程：对人类知识和智能进行逻辑抽象化、数据符号化和格式规范化等等工作，使得知识能够被计算机所识别、记录和处理；</li><li>系统构建：构建软件系统，使用编程的方式将知识的逻辑进行重现；</li><li>效果评估：评价软件的服务效果，对软件进行持续维护；</li></ol><p>普通软件的特征工程的特征是一个不算太大的有限集，而当一个问题的特征集太过大，那么构造出的软件的复杂度就会变得非常庞大，甚至无法进行特征工程，如：自然语言理解、图形识别、声音识别等。对于普通的软件，其输入和输出基本是由开发人员所高度抽象之后的数据，但是，AI 软件的输入输出内容相较原始，甚至可以无须进行特征工程，直接通过自我学习简化特征工程这一步骤。AI 需要大量的特征数据集进行学习和训练，直到 AI 归纳总结出了一个可靠的映射模型。</p><p><strong>因此，普通软件和 AI 的不同点，在于是否可以通过自主学习，简化或省略特征工程；共同点，一个软件往往抽象有限的智能，提供一个有限的服务集，一个 AI 模型往往抽象有限的智能，提供一个特定的智能集。</strong></p><p>目前的 AI 模型主要应用领域：</p><ul><li>自然语言处理：让机器直接看懂人话</li><li>文本处理：理解文本、创作文本</li><li>图像处理：识别图像、绘制图像（画作）</li><li>声音处理：识别声音、模拟声音（音乐，发声）</li><li>视频处理：结合使用图像处理和声音处理</li><li>专家系统：构建一个精通某一专业领域的AI专家，可以用以决策和执行。</li></ul>',9)]))}const I=e(o,[["render",r]]);export{A as __pageData,I as default};
