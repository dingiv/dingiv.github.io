import{_ as a,c as l,o as i,ae as t}from"./chunks/framework.Dgg8-8ov.js";const p=JSON.parse('{"title":"SL","description":"","frontmatter":{"title":"SL","order":60},"headers":[],"relativePath":"client/sl/index.md","filePath":"client/sl/index.md"}'),n={name:"client/sl/index.md"};function r(s,e,o,d,c,_){return i(),l("div",null,e[0]||(e[0]=[t('<h1 id="sl" tabindex="-1">SL <a class="header-anchor" href="#sl" aria-label="Permalink to &quot;SL&quot;">​</a></h1><p>SL（Shading Language）着色语言是特定的<strong>图形 API</strong>提供的，运行于 GPU 之上的图形渲染编程语言，它对 GPU 驱动和系统调用进行了初步封装，简化了 GPU 调用的流程。</p><ul><li>语法简单：支持简单的编程特性和数据结构，进行偏向于数学计算的任务；</li><li>并行性高：一个 SL 程序会同时运行在多个 GPU 的核心之上，充分利用 GPU 的并行计算能力；</li><li>图形特化：特别适合用于计算与图形处理相关的算法，由图形 API 提供内置的图形处理函数，支持矩阵数据类型，高性能矩阵运算；</li></ul><h2 id="常见的图形-api" tabindex="-1">常见的图形 API <a class="header-anchor" href="#常见的图形-api" aria-label="Permalink to &quot;常见的图形 API&quot;">​</a></h2><ul><li>glsl，OpenGL 提供的 SL，广泛用于目前的工业界中，但是近年来出现的了新的接班人 Vulkan；</li><li>wgsl，WebGPU 标准提供的基于浏览器的图形 API，拥有更加强大的</li><li>hlsl，DirectX Windows 平台提供的</li></ul>',5)]))}const u=a(n,[["render",r]]);export{p as __pageData,u as default};
