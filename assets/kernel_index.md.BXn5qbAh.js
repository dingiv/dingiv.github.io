import{_ as t,c as l,o as r,ae as o}from"./chunks/framework.Cd-3tpCq.js";const u=JSON.parse('{"title":"系统层","description":"","frontmatter":{"title":"系统层","order":60},"headers":[],"relativePath":"kernel/index.md","filePath":"kernel/index.md"}'),i={name:"kernel/index.md"};function n(a,e,s,_,d,c){return r(),l("div",null,e[0]||(e[0]=[o('<h1 id="系统软件开发技术" tabindex="-1">系统软件开发技术 <a class="header-anchor" href="#系统软件开发技术" aria-label="Permalink to &quot;系统软件开发技术&quot;">​</a></h1><p>学习系统层软件开发，意味着开发者需要</p><ul><li>在上层：编写<strong>系统服务软件</strong>，简化<strong>系统层接口</strong>的调用流程，提供系统辅助服务，优化用户体验</li><li>向上：为<strong>用户层软件</strong>编写系统层接口和调用，满足上层应用的业务需求</li><li>在本层：编写组成系统功能的各个模块，并协调模块之间的交互</li><li>向下：使用硬件接口，编写<strong>驱动程序</strong>，从而直接操控硬件，抽象、封装、管理硬件资源</li></ul><blockquote><ul><li>系统层软件：属于操作系统的一部分，CPU 运行在内核态或者特权级别，拥有直接控制硬件的能力</li><li>用户层软件：通过操作系统封装的进程，间接访问内存和运行指令，且 CPU 运行在用户态或者受限级别，无法直接操作硬件</li><li>系统服务软件：运行在用户空间，直接对接系统层提供给用户层软件的接口，并做进一步的封装，简化用户层软件的调用流程，优化用户层开发体验。</li></ul></blockquote>',4)]))}const m=t(i,[["render",n]]);export{u as __pageData,m as default};
