import{_ as i,c as a,o as e,ae as r}from"./chunks/framework.CBTkueSR.js";const d=JSON.parse('{"title":"Web 优化","description":"","frontmatter":{},"headers":[],"relativePath":"client/web/browser/optimize.md","filePath":"client/web/browser/optimize.md"}'),o={name:"client/web/browser/optimize.md"};function t(n,l,s,u,h,c){return e(),a("div",null,[...l[0]||(l[0]=[r('<h1 id="web-优化" tabindex="-1">Web 优化 <a class="header-anchor" href="#web-优化" aria-label="Permalink to &quot;Web 优化&quot;">​</a></h1><h2 id="浏览器性能优化" tabindex="-1">浏览器性能优化 <a class="header-anchor" href="#浏览器性能优化" aria-label="Permalink to &quot;浏览器性能优化&quot;">​</a></h2><h3 id="关键渲染路径优化" tabindex="-1">关键渲染路径优化 <a class="header-anchor" href="#关键渲染路径优化" aria-label="Permalink to &quot;关键渲染路径优化&quot;">​</a></h3><ol><li><p><strong>减少关键资源</strong></p><ul><li>减少阻塞渲染的CSS和JavaScript</li><li>内联关键CSS</li><li>异步加载非关键JavaScript</li></ul></li><li><p><strong>减少资源大小</strong></p><ul><li>压缩HTML、CSS、JavaScript</li><li>使用Gzip/Brotli压缩</li><li>图片优化</li></ul></li><li><p><strong>减少请求数量</strong></p><ul><li>合并CSS和JavaScript文件</li><li>使用CSS Sprite</li><li>使用字体图标或SVG</li></ul></li><li><p><strong>优化加载顺序</strong></p><ul><li>CSS放在head中</li><li>JavaScript放在body底部</li><li>使用async/defer属性</li></ul></li></ol><h3 id="渲染性能优化" tabindex="-1">渲染性能优化 <a class="header-anchor" href="#渲染性能优化" aria-label="Permalink to &quot;渲染性能优化&quot;">​</a></h3><ol><li><p><strong>减少回流（Reflow）</strong></p><ul><li>批量修改DOM</li><li>使用document fragment</li><li>避免频繁读取布局信息</li></ul></li><li><p><strong>减少重绘（Repaint）</strong></p><ul><li>使用CSS transform和opacity代替修改位置和可见性</li><li>使用will-change提示浏览器</li><li>合理使用GPU加速</li></ul></li><li><p><strong>帧率优化</strong></p><ul><li>使用requestAnimationFrame</li><li>避免长任务阻塞主线程</li><li>使用Web Workers分担计算密集型任务</li></ul></li></ol><h3 id="网络优化" tabindex="-1">网络优化 <a class="header-anchor" href="#网络优化" aria-label="Permalink to &quot;网络优化&quot;">​</a></h3><ol><li><p><strong>资源预加载</strong></p><ul><li>preload关键资源</li><li>prefetch可能需要的资源</li><li>preconnect提前建立连接</li></ul></li><li><p><strong>HTTP优化</strong></p><ul><li>使用HTTP/2多路复用</li><li>使用HTTP/3 QUIC协议</li><li>合理设置缓存策略</li></ul></li><li><p><strong>CDN加速</strong></p><ul><li>使用CDN分发静态资源</li><li>选择离用户最近的节点</li><li>使用多CDN提供冗余</li></ul></li></ol><h2 id="浏览器开发者工具" tabindex="-1">浏览器开发者工具 <a class="header-anchor" href="#浏览器开发者工具" aria-label="Permalink to &quot;浏览器开发者工具&quot;">​</a></h2><p>现代浏览器提供了强大的开发者工具，帮助开发者调试和优化Web应用。</p><h3 id="elements-元素" tabindex="-1">Elements（元素） <a class="header-anchor" href="#elements-元素" aria-label="Permalink to &quot;Elements（元素）&quot;">​</a></h3><ul><li>检查和修改DOM结构</li><li>实时编辑CSS样式</li><li>查看事件监听器</li><li>断点调试DOM变化</li></ul><h3 id="console-控制台" tabindex="-1">Console（控制台） <a class="header-anchor" href="#console-控制台" aria-label="Permalink to &quot;Console（控制台）&quot;">​</a></h3><ul><li>输出调试信息</li><li>执行JavaScript代码</li><li>查看错误和警告</li><li>使用console API</li></ul><h3 id="network-网络" tabindex="-1">Network（网络） <a class="header-anchor" href="#network-网络" aria-label="Permalink to &quot;Network（网络）&quot;">​</a></h3><ul><li>监控网络请求</li><li>分析资源加载时间</li><li>查看HTTP头信息</li><li>模拟网络条件</li></ul><h3 id="performance-性能" tabindex="-1">Performance（性能） <a class="header-anchor" href="#performance-性能" aria-label="Permalink to &quot;Performance（性能）&quot;">​</a></h3><ul><li>记录和分析页面性能</li><li>查看CPU和内存使用情况</li><li>识别性能瓶颈</li><li>分析帧率和渲染时间</li></ul><h3 id="memory-内存" tabindex="-1">Memory（内存） <a class="header-anchor" href="#memory-内存" aria-label="Permalink to &quot;Memory（内存）&quot;">​</a></h3><ul><li>分析内存使用情况</li><li>查找内存泄漏</li><li>查看内存分配</li><li>生成堆快照</li></ul><h3 id="application-应用" tabindex="-1">Application（应用） <a class="header-anchor" href="#application-应用" aria-label="Permalink to &quot;Application（应用）&quot;">​</a></h3><ul><li>管理本地存储</li><li>查看和修改Cookie</li><li>管理Service Worker</li><li>查看Web应用清单</li></ul><h3 id="security-安全" tabindex="-1">Security（安全） <a class="header-anchor" href="#security-安全" aria-label="Permalink to &quot;Security（安全）&quot;">​</a></h3><ul><li>检查HTTPS证书</li><li>识别混合内容问题</li><li>查看内容安全策略</li><li>分析安全漏洞</li></ul><h2 id="浏览器兼容性" tabindex="-1">浏览器兼容性 <a class="header-anchor" href="#浏览器兼容性" aria-label="Permalink to &quot;浏览器兼容性&quot;">​</a></h2><h3 id="检测和解决兼容性问题" tabindex="-1">检测和解决兼容性问题 <a class="header-anchor" href="#检测和解决兼容性问题" aria-label="Permalink to &quot;检测和解决兼容性问题&quot;">​</a></h3><ol><li><p><strong>特性检测</strong></p><ul><li>检测浏览器是否支持特定功能</li><li>根据支持情况提供不同实现</li><li>避免使用用户代理检测</li></ul></li><li><p><strong>Polyfill</strong></p><ul><li>为旧浏览器提供新功能的模拟实现</li><li>只在需要时加载</li><li>使用现代工具自动添加</li></ul></li><li><p><strong>渐进增强</strong></p><ul><li>从基本功能开始构建</li><li>逐步添加高级特性</li><li>确保核心功能在所有浏览器中可用</li></ul></li><li><p><strong>工具支持</strong></p><ul><li>Babel转译现代JavaScript</li><li>PostCSS处理CSS兼容性</li><li>Autoprefixer自动添加厂商前缀</li><li>Browserslist定义目标浏览器</li></ul></li></ol><h3 id="常见兼容性资源" tabindex="-1">常见兼容性资源 <a class="header-anchor" href="#常见兼容性资源" aria-label="Permalink to &quot;常见兼容性资源&quot;">​</a></h3><ul><li><strong>Can I use</strong>：查询特性兼容性数据</li><li><strong>MDN Web Docs</strong>：详细的API兼容性信息</li><li><strong>Modernizr</strong>：特性检测库</li><li><strong>core-js</strong>：JavaScript标准库polyfill</li></ul>',29)])])}const b=i(o,[["render",t]]);export{d as __pageData,b as default};
