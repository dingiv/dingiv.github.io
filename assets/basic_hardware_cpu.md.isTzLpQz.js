import{_ as e,c as r,o as t,ae as i}from"./chunks/framework.Cthp9TdA.js";const p=JSON.parse('{"title":"CPU","description":"","frontmatter":{},"headers":[],"relativePath":"basic/hardware/cpu.md","filePath":"basic/hardware/cpu.md"}'),o={name:"basic/hardware/cpu.md"};function c(h,a,l,n,s,d){return t(),r("div",null,a[0]||(a[0]=[i('<h1 id="cpu" tabindex="-1">CPU <a class="header-anchor" href="#cpu" aria-label="Permalink to &quot;CPU&quot;">​</a></h1><h3 id="cpu-拓扑" tabindex="-1">CPU 拓扑 <a class="header-anchor" href="#cpu-拓扑" aria-label="Permalink to &quot;CPU 拓扑&quot;">​</a></h3><h2 id="指令集-arm、x86、resic-v" tabindex="-1">指令集，arm、x86、resic-v <a class="header-anchor" href="#指令集-arm、x86、resic-v" aria-label="Permalink to &quot;指令集，arm、x86、resic-v&quot;">​</a></h2><h2 id="逻辑门" tabindex="-1">逻辑门 <a class="header-anchor" href="#逻辑门" aria-label="Permalink to &quot;逻辑门&quot;">​</a></h2><h2 id="alu" tabindex="-1">ALU <a class="header-anchor" href="#alu" aria-label="Permalink to &quot;ALU&quot;">​</a></h2><h2 id="流水线" tabindex="-1">流水线 <a class="header-anchor" href="#流水线" aria-label="Permalink to &quot;流水线&quot;">​</a></h2><h2 id="cpu-缓存" tabindex="-1">CPU 缓存 <a class="header-anchor" href="#cpu-缓存" aria-label="Permalink to &quot;CPU 缓存&quot;">​</a></h2><p>. 现代 CPU 的高级特性 现代 CPU 在基本硬件实现的基础上，加入了以下优化：</p><p>流水线与超标量： 流水线将指令分为多个阶段并行执行。 超标量 CPU 每个周期可发射多条指令，依赖多个 ALU 和执行单元。 分支预测： 通过预测跳转指令的结果减少流水线暂停。 硬件实现：分支预测器（基于历史跳转记录的查找表）。 乱序执行： CPU 动态调整指令执行顺序，最大化硬件利用率。 硬件实现：使用重排序缓冲区（ROB）和寄存器重命名。 缓存与内存管理： CPU 内部集成高速缓存（L1、L2 缓存），减少内存访问延迟。 硬件实现：SRAM 存储器、缓存控制器、TLB（快表）。 多核与超线程： 多核 CPU 集成多个处理核心，共享部分资源（如 L3 缓存）。 超线程（Hyper-Threading）通过虚拟核心提高并行性。</p>',9)]))}const P=e(o,[["render",c]]);export{p as __pageData,P as default};
