import{_ as s,c as e,o as n,ae as t}from"./chunks/framework.CBTkueSR.js";const h=JSON.parse('{"title":"grid布局","description":"","frontmatter":{},"headers":[],"relativePath":"client/web/css/trick/layout/grid.md","filePath":"client/web/css/trick/layout/grid.md"}'),i={name:"client/web/css/trick/layout/grid.md"};function p(l,a,o,d,r,c){return n(),e("div",null,[...a[0]||(a[0]=[t(`<h1 id="grid布局" tabindex="-1">grid布局 <a class="header-anchor" href="#grid布局" aria-label="Permalink to &quot;grid布局&quot;">​</a></h1><p>grid布局可以减少元素层级的嵌套，并提供双轴控制的弹性布局。使用grid的时候需要规定两个轴，有三种情况，两个固定轴，固定行轴+自由列轴，自由行轴+固定列轴，所谓自由就是该方向上的轴数量不固定。</p><p>布局时，和flex布局一样，需要对父子元素都进行定义。</p><h2 id="父元素属性" tabindex="-1">父元素属性 <a class="header-anchor" href="#父元素属性" aria-label="Permalink to &quot;父元素属性&quot;">​</a></h2><p>在父元素上规定三种轴类型中一种。</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>grid-template-row/column</span></span>
<span class="line"><span>grid-auto-row/column</span></span>
<span class="line"><span>grid-template-area</span></span></code></pre></div><p>也可以规定对齐方式</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>align-content/items</span></span>
<span class="line"><span>justify-content/items</span></span></code></pre></div><h2 id="子元素属性" tabindex="-1">子元素属性： <a class="header-anchor" href="#子元素属性" aria-label="Permalink to &quot;子元素属性：&quot;">​</a></h2><p>规定子元素的弹性</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>grid-column</span></span>
<span class="line"><span>grid-row</span></span>
<span class="line"><span>grid-area</span></span></code></pre></div><p>规定子元素的自对齐</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>justify/align/place-self</span></span></code></pre></div><h2 id="grid-keyword" tabindex="-1">grid keyword <a class="header-anchor" href="#grid-keyword" aria-label="Permalink to &quot;grid keyword&quot;">​</a></h2><p>用于指定特殊的弹性值，这些弹性可以达到特定的grid效果，独属于grid布局</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>min-content、max-content、fr、auto</span></span>
<span class="line"><span>fit-content()、minmax()、min()、max()</span></span>
<span class="line"><span>repeat():  repeat(auto-fill/auto-fit/\\&lt;number\\&gt;, \\&lt;keyword1, keyword2\\&gt;)</span></span></code></pre></div>`,16)])])}const u=s(i,[["render",p]]);export{h as __pageData,u as default};
