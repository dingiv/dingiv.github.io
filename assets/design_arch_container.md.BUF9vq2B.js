import{_ as a,c as t,o as r,ae as n}from"./chunks/framework.CBTkueSR.js";const h=JSON.parse('{"title":"容器","description":"","frontmatter":{},"headers":[],"relativePath":"design/arch/container.md","filePath":"design/arch/container.md"}'),i={name:"design/arch/container.md"};function o(s,e,c,l,_,d){return r(),t("div",null,[...e[0]||(e[0]=[n('<h1 id="容器" tabindex="-1">容器 <a class="header-anchor" href="#容器" aria-label="Permalink to &quot;容器&quot;">​</a></h1><p>容器在软件工程中是一个信息量巨大的词。一谈到容器，我们可能会想到 docker 容器。但是，容器的外延并不止于此，但我们尝试从不同的层面区理解容器时，我们会发现容器其实是一个<strong>专注于管理某类资源的有限系统</strong>。</p><ul><li>资源隔离：容器用于呈装何种资源，提供何种层次的隔离能力</li><li>依赖管理：为了容器内部的资源提供必要的运行环境和依赖</li><li>容器间通信：在多实例的容器系统中，负责容器间的通信和交互</li><li>生命周期：资源往往具有生命周期，容器本身也就具有了生命周期</li></ul><p>有限性：容器管理的资源是有限的，容器管理的内容是有限。</p>',4)])])}const m=a(i,[["render",o]]);export{h as __pageData,m as default};
