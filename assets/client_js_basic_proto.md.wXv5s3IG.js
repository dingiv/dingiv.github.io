import{_ as t,a as e}from"./chunks/class-tree.yXo4mE1M.js";import{_ as r,c as o,o as i,ae as s}from"./chunks/framework.Dh1jimFm.js";const u=JSON.parse('{"title":"原型链","description":"","frontmatter":{},"headers":[],"relativePath":"client/js/basic/proto.md","filePath":"client/js/basic/proto.md"}'),c={name:"client/js/basic/proto.md"};function l(n,a,p,_,d,h){return i(),o("div",null,a[0]||(a[0]=[s('<h1 id="原型链" tabindex="-1">原型链 <a class="header-anchor" href="#原型链" aria-label="Permalink to &quot;原型链&quot;">​</a></h1><h2 id="原型链是什么" tabindex="-1">原型链是什么 <a class="header-anchor" href="#原型链是什么" aria-label="Permalink to &quot;原型链是什么&quot;">​</a></h2><p>原型链是JavaScript中的一种机制，它允许对象继承属性和方法。每个JavaScript对象都有一个原型对象，这个原型对象也有自己的原型对象，以此类推，形成一个链条。当访问一个对象的属性或方法时，如果该对象本身没有该属性或方法，JavaScript引擎会沿着原型链向上查找，直到找到为止。</p><h2 id="原型链的作用" tabindex="-1">原型链的作用 <a class="header-anchor" href="#原型链的作用" aria-label="Permalink to &quot;原型链的作用&quot;">​</a></h2><p>原型链的作用是实现对象的继承。通过原型链，子对象可以继承父对象的属性和方法，从而实现代码的复用和模块化。</p><h2 id="原型链的原理" tabindex="-1">原型链的原理 <a class="header-anchor" href="#原型链的原理" aria-label="Permalink to &quot;原型链的原理&quot;">​</a></h2><p><img src="'+t+'" alt="proto"></p><p><img src="'+e+'" alt="alt text"></p>',8)]))}const b=r(c,[["render",l]]);export{u as __pageData,b as default};
